name: Build and Publish Trellis Action Images

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        node_version: [18.20.4, 20.19.0, 22.10.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Map Node -> Alpine
        id: map
        run: |
          case "${{ matrix.node_version }}" in
            18*) echo "ALPINE_VERSION=3.18" >> $GITHUB_ENV ;;
            20*) echo "ALPINE_VERSION=3.19" >> $GITHUB_ENV ;;
            22*) echo "ALPINE_VERSION=3.20" >> $GITHUB_ENV ;;
            *) echo "ALPINE_VERSION=3.19" >> $GITHUB_ENV ;; # default
          esac
          # Extract major Node version
          NODE_MAJOR=$(echo ${{ matrix.node_version }} | cut -d. -f1)
          echo "NODE_MAJOR=$NODE_MAJOR" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            NODE_VERSION=${{ matrix.node_version }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-node${{ env.NODE_MAJOR }}

      # # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see [Using artifact attestations to establish provenance for builds](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
